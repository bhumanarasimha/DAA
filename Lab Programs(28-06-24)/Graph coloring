def is_valid(graph, colors, vertex, color):
    for i in range(len(graph)):
        if graph[vertex][i] == 1 and colors[i] == color:
            return False
    return True

def graph_coloring(graph, m, colors, vertex):
    if vertex == len(graph):
        return True

    for color in range(1, m + 1):
        if is_valid(graph, colors, vertex, color):
            colors[vertex] = color
            if graph_coloring(graph, m, colors, vertex + 1):
                return True
            colors[vertex] = 0

    return False

def solve_graph_coloring(graph, m):
    colors = [0] * len(graph)
    if graph_coloring(graph, m, colors, 0):
        return colors
    else:
        return None

# Example usage:
graph = [
    [0, 1, 1, 1],
    [1, 0, 1, 0],
    [1, 1, 0, 1],
    [1, 0, 1, 0]
]
m = 3  # Number of colors
solution = solve_graph_coloring(graph, m)
if solution:
    print("Solution found:", solution)
else:
    print("No solution exists")
