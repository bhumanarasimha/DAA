def quick_sort(arr, low, high):
    if low < high:
        # Partition the array and get the pivot index
        pivot_index = partition(arr, low, high)
        print(f"Array after partition with pivot {arr[pivot_index]}: {arr}")

        # Recursively apply Quick Sort to the sub-arrays
        quick_sort(arr, low, pivot_index - 1)
        quick_sort(arr, pivot_index + 1, high)

def partition(arr, low, high):
    pivot = arr[low]
    left = low + 1
    right = high

    done = False
    while not done:
        while left <= right and arr[left] <= pivot:
            left = left + 1
        while arr[right] >= pivot and right >= left:
            right = right - 1
        if right < left:
            done = True
        else:
            arr[left], arr[right] = arr[right], arr[left]

    arr[low], arr[right] = arr[right], arr[low]

    return right

def print_array(arr):
    for i in range(len(arr)):
        print(arr[i], end=" ")
    print()

# Example usage
arr = [10, 16, 8, 12, 15, 6, 3, 9, 5]
print("Given array is:")
print_array(arr)

quick_sort(arr, 0, len(arr) - 1)
print("Sorted array is:")
print_array(arr)
