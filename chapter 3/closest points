import heapq

def k_closest_points(points, k):
    # Calculate the distance of each point from the origin and store it in a heap
    heap = []
    for (x, y) in points:
        distance = x**2 + y**2  # We use the square of the distance to avoid floating point operations
        heapq.heappush(heap, (distance, [x, y]))

    # Extract the k closest points
    result = []
    for _ in range(k):
        result.append(heapq.heappop(heap)[1])

    return result

# Test cases
points1 = [[1, 3], [-2, 2], [5, 8], [0, 1]]
k1 = 2
print(k_closest_points(points1, k1))  # Output: [[-2, 2], [0, 1]]

points2 = [[1, 3], [-2, 2]]
k2 = 1
print(k_closest_points(points2, k2))  # Output: [[-2, 2]]

points3 = [[3, 3], [5, -1], [-2, 4]]
k3 = 2
print(k_closest_points(points3, k3))  # Output: [[3, 3], [-2, 4]]
